correl <- numeric(0)
for(i in 1:332) {
d1 <- na.omit(read.csv(file_list[i]))
if(nrow(d1) <= threshold) {
next
}
correl <- c(correl, cor(d1[,2],d1[,3])
}
correl
}
}
correl <- c(0)
}
}
}
d1 <- na.omit(read.csv(file_list[i]))
correl <- c(correl, cor(d1[sulfate],d1[nitrate]))
head(d1)
nrow(d1)
}
corr <- function (directory, threshold = 0) {
file_list <- list.files (directory, full.names = TRUE)
correl <- c(0)
for(i in 1:332) {
d1 <- na.omit(read.csv(file_list[i]))
complete <- nrow(d1)
if(complete <= threshold) {
next
}
sulfate <- data[["sulfate"]]
nitrate <- data[["nitrate"]]
correl <- c(correl, cor(sulfate,nitrate))
}
correl
}
d1 <- na.omit(read.csv(file_list[i]))
}
corr <- function (directory, threshold = 0) {
file_list <- list.files (directory, full.names = TRUE)
correl <- c(0)
for(i in 1:332) {
d1 <- na.omit(read.csv(file_list[i]))
complete <- nrow(d1)
if(complete <= threshold) {
next
}
sulfate <- data[["sulfate"]]
nitrate <- data[["nitrate"]]
correl <- c(correl, cor(sulfate,nitrate))
}
correl
}
corr("specdata",150)
}
}
corr <- function (directory, threshold = 0) {
file_list <- list.files (directory, full.names = TRUE)
correl <- c(0)
for(i in 1:332) {
d1 <- na.omit(read.csv(file_list[i]))
complete <- nrow(d1)
if(complete <= threshold) {
next
}
sulfate <- d1$sulfate
nitrate <- d1$nitrate
correl <- c(correl, cor(sulfate,nitrate))
}
correl
}
corr("specdata",150)
cr <- corr("specdata",150)
head(cr)
submit()
submit()
}
}
corr <- function (directory, threshold = 0) {
file_list <- list.files (directory, full.names = TRUE)
correlation <- c(0)
for (i in 1:332) {
d1 <- na.omit(read.csv(file_list[i]))
complete <- nrow(d1)
if (complete <= threshold) {
next
}
sulfate <- d1$sulfate
nitrate <- d1$nitrate
correlation <- c(correlation, cor(sulfate,nitrate))
}
correlation
}
corr <- function (directory, threshold = 0) {
file_list <- list.files (directory, full.names = TRUE)
correlation <- c(0)
for (i in 1:332) {
d1 <- na.omit(read.csv(file_list[i]))
complete <- nrow(d1)
if (complete <= threshold) {
next
}
sulfate <- d1$sulfate
nitrate <- d1$nitrate
correlation <- c(correlation, cor(sulfate,nitrate))
}
correlation
}
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
submit()
correlation
}
crl
}
}
corr <- function (directory, threshold = 0) {
}
nitrate <- d2$nitrate
}
}
}
}
#'
}
}
}
}
}
corr <- function(directory, threshold = 0) {
corr <- function(directory, threshold = 0) {
cr <- c()
file_list <- list.files(directory, full.names = TRUE)
for (id in 1:332) {
data <- na.omit(read.csv(file_list[i]))
complete <- nrow(data)
if (complete <= threshold) {
next
}
sulfate <- data$sulfate
nitrate <- data$nitrate
cr <- c(cr, cor(sulfate, nitrate))
}
cr
}
source('~/R/RStudio/corr.R', echo=TRUE)
}
if (complete <= threshold) { next }
complete <- nrow(data)
if (complete <= threshold) { next }
cr <- c(cr, cor(sulfate, nitrate))
crl
}
}
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
source("corr.R")
submit()
source("submitscript1.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("asds.R")
all_files <- as.character( list.files(directory) )
}
source("asds.R")
source("asds.R")
submit()
}
submit()
source("corr.R")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
}
}
source("corr.R")
cr <- corr("specdata", 150)
head (cr)
summary(cr)
submit()
submit()
submit()
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 0
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
library("swirl")
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
a1 <- as.list(flags)
a1
cls_list <- lapply(flags, class)
cls_view
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vala <- lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem)elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, unique, character(1))
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, replace = T, prob = c(0.3,0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, 1, prob = 0.7)
flips2 <- rbinom(100, 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.tim()
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.Date())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.tim() > t1
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = "days )"
difftime(Sys.time(), t1, units = "days")
cars <- data.frame(cars)
data(cars)
?cars
hear(cars)
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(y = cars$speed, x = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2
plot(cars, pch = 2)
data("mtcars")
data(mtcars)
?boxplot
boxplot(data = mtcars, mpg ~ cyl)
boxplot(data = mtcars, formula = mpg ~ cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
debug(ls)
ls
database
exit()
quit()
library(datasets)
data("iris")
hread(iris)
head(iris)
mean(iris$Sepal.Length, Species="virginica")
mean(split(iris[,1],iris$Species))
sapply(split(iris,iris$Species), mean)
select(iris, iris$Species == "virginica")
library("deplyr")
install("deplyr")
?mean
mean(iris$Sepal.Length, Species=="virginica")
mean(iris$Sepal.Length, iris$Species=="virginica")
mean(iris$Sepal.Length, iris$Species=="virginica", trim = 0)
average(iris$Sepal.Length, iris$Species=="virginica")
install.packages("deplyr")
install.packages("dplyr")
a <- select(iris, iris$Species =="virginica")
?select
?dplyr
a <- select(iris, Species =="virginica")
sapply(split(iris$Sepal.Length, iris$Species,), mean)
head(iris)
apply(iris[,1:4], 2, mean)
data(mtcars)
head(mtcars)
sapply(split(mtcars$mpg,mtcars$cyl), mean)
sapply(split(mtcars$hp,mtcars$cyl), mean)
a <- sapply(split(mtcars$hp,mtcars$cyl), mean)
a[8] - a[4]
a["8"] - a["42]
a["8"] - a["42"]
a["8"] - a["4"]
debug(ls)
ls
library(xlsx)
install.packages("xlsx")
library(xlsx)
library(xlsxjars)
R.version()
R.Version()
install.packages("xlsx")
library(xlsx)
install.packages("rJava")
library(xlsx)
library(rJava)
Sys.getenv("R_ARCH")
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(url, "data.zip")
unzip("data.zip")
hpcdata <- read.table("household_power_consumption.txt", sep = ";", header = TRUE, na.strings = "?")
hpcdata$Date <- as.Date(hpcdata$Date, "%d/%m/%Y")
hpcdata$Time <- paste(hpcdata$Date, hpcdata$Time)
hpcdata$Time <- strptime(hpcdata$Time, format = "%Y-%m-%d %H:%M:%S")
hpcdata <- subset.data.frame(hpcdata, hpcdata$Date == as.Date(as.character("2007-02-01")) |
hpcdata$Date == as.Date(as.character("2007-02-02")))
png("plot1.png")
hist(hpcdata$Global_active_power, col = "Red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts", ylab = "Frequency")
dev.off()
png("plot1.png")
hist(hpcdata$Global_active_power, col = "Red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts", ylab = "Frequency")
dev.off()
setwd("ExData_Plotting1")
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(url, "data.zip")
unzip("data.zip")
hpcdata <- read.table("household_power_consumption.txt", sep = ";", header = TRUE, na.strings = "?")
hpcdata$Date <- as.Date(hpcdata$Date, "%d/%m/%Y")
hpcdata$Time <- paste(hpcdata$Date, hpcdata$Time)
hpcdata$Time <- strptime(hpcdata$Time, format = "%Y-%m-%d %H:%M:%S")
hpcdata <- subset.data.frame(hpcdata, hpcdata$Date == as.Date(as.character("2007-02-01")) |
hpcdata$Date == as.Date(as.character("2007-02-02")))
png("plot1.png")
hist(hpcdata$Global_active_power, col = "Red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts", ylab = "Frequency")
dev.off()
png("plot1.png")
hist(hpcdata$Global_active_power, col = "Red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)", ylab = "Frequency")
dev.off()
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(url, "data.zip")
unzip("data.zip")
hpcdata <- read.table("household_power_consumption.txt", sep = ";", header = TRUE, na.strings = "?")
hpcdata$Date <- as.Date(hpcdata$Date, "%d/%m/%Y")
hpcdata$Time <- paste(hpcdata$Date, hpcdata$Time)
hpcdata$Time <- strptime(hpcdata$Time, format = "%Y-%m-%d %H:%M:%S")
hpcdata <- subset.data.frame(hpcdata, hpcdata$Date == as.Date(as.character("2007-02-01")) |
hpcdata$Date == as.Date(as.character("2007-02-02")))
png("plot2.png")
plot(hpcdata$Time, hpcdata$Global_active_power, type = "n",
ylab = "Global Active Power (kilowatts)", xlab = "")
lines(hpcdata$Time, hpcdata$Global_active_power)
dev.off()
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(url, "data.zip")
unzip("data.zip")
hpcdata <- read.table("household_power_consumption.txt", sep = ";", header = TRUE, na.strings = "?")
hpcdata$Date <- as.Date(hpcdata$Date, "%d/%m/%Y")
hpcdata$Time <- paste(hpcdata$Date, hpcdata$Time)
hpcdata$Time <- strptime(hpcdata$Time, format = "%Y-%m-%d %H:%M:%S")
hpcdata <- subset.data.frame(hpcdata, hpcdata$Date == as.Date(as.character("2007-02-01")) |
hpcdata$Date == as.Date(as.character("2007-02-02")))
png("plot3.png")
with(hpcdata, {
plot (hpcdata$Time, hpcdata$Sub_metering_1, type = "n", ylab = "Energy sub Metering", xlab = "")
lines(hpcdata$Time, hpcdata$Sub_metering_1)
lines(hpcdata$Time, hpcdata$Sub_metering_2, col = "Red")
lines(hpcdata$Time, hpcdata$Sub_metering_3, col = "Blue")
legend("topright", col = c("Black", "Red", "Blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd = 1, lty = 1)
})
dev.off()
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(url, "data.zip")
unzip("data.zip")
hpcdata <- read.table("household_power_consumption.txt", sep = ";", header = TRUE, na.strings = "?")
hpcdata$Date <- as.Date(hpcdata$Date, "%d/%m/%Y")
hpcdata$Time <- paste(hpcdata$Date, hpcdata$Time)
hpcdata$Time <- strptime(hpcdata$Time, format = "%Y-%m-%d %H:%M:%S")
hpcdata <- subset.data.frame(hpcdata, hpcdata$Date == as.Date(as.character("2007-02-01")) |
hpcdata$Date == as.Date(as.character("2007-02-02")))
png("plot4.png")
par(mfrow = c(2,2))
##Plot1
plot(hpcdata$Time, hpcdata$Global_active_power, type = "n",
ylab = "Global Active Power", xlab = "")
lines(hpcdata$Time, hpcdata$Global_active_power)
##Plot2
plot(hpcdata$Time, hpcdata$Voltage, type = "n",
ylab = "Voltage", xlab = "datetime")
lines(hpcdata$Time, hpcdata$Voltage)
##Plot3
with(hpcdata, {
plot (hpcdata$Time, hpcdata$Sub_metering_1, type = "n", ylab = "Energy sub Metering", xlab = "")
lines(hpcdata$Time, hpcdata$Sub_metering_1)
lines(hpcdata$Time, hpcdata$Sub_metering_2, col = "Red")
lines(hpcdata$Time, hpcdata$Sub_metering_3, col = "Blue")
legend("topright", col = c("Black", "Red", "Blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd = 1, lty = 1)
})
##Plot4
plot(hpcdata$Time, hpcdata$Global_reactive_power, type = "n",
ylab = "Global_reactive_power", xlab = "datetime")
lines(hpcdata$Time, hpcdata$Global_reactive_power)
dev.off()
